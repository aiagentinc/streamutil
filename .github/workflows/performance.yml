name: Performance Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * 6'  # Run weekly on Saturday at 4 AM UTC

jobs:
  performance:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Global timeout for the job
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run stress tests (limited)
      run: |
        # Run stress tests with reduced duration for CI
        go test -run=TestConcurrentStress/LowConcurrency -v -timeout=2m ./...
        go test -run=TestConcurrentStress/MediumConcurrency -v -timeout=2m ./...
    
    - name: Run throughput tests (limited)
      run: |
        # Run throughput tests with shorter duration
        go test -run=TestThroughputUnderLoad -v -timeout=5m ./...
    
    - name: Run scalability tests
      run: |
        # Run scalability tests
        go test -run=TestScalability -v -timeout=10m ./...
    
    - name: Run latency distribution test
      run: |
        # Run latency tests
        go test -run=TestLatencyDistribution -v -timeout=5m ./...
    
    - name: Memory leak detection (quick check)
      run: |
        # Quick memory leak check
        go test -run=TestMemoryLeakDetection -v -timeout=3m ./...
    
    - name: Generate performance report
      if: always()
      run: |
        echo "## Performance Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Results" >> $GITHUB_STEP_SUMMARY
        echo "Performance tests completed. Check the logs for detailed metrics." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Note**: These are limited CI runs. For full performance analysis, run tests locally." >> $GITHUB_STEP_SUMMARY

  benchmark-comparison:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true
    
    - name: Run benchmarks on base branch
      run: |
        git checkout ${{ github.base_ref }}
        go test -bench=. -benchmem -benchtime=3s -run=^$ ./... > base_benchmarks.txt
    
    - name: Run benchmarks on PR branch
      run: |
        git checkout ${{ github.head_ref }}
        go test -bench=. -benchmem -benchtime=3s -run=^$ ./... > pr_benchmarks.txt
    
    - name: Install benchstat
      run: go install golang.org/x/perf/cmd/benchstat@latest
    
    - name: Compare benchmarks
      run: |
        benchstat base_benchmarks.txt pr_benchmarks.txt > comparison.txt || true
        echo "## Benchmark Comparison" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        cat comparison.txt >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
    
    - name: Upload comparison
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-comparison
        path: |
          base_benchmarks.txt
          pr_benchmarks.txt
          comparison.txt
        retention-days: 7